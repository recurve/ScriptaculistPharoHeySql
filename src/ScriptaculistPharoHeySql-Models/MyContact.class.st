Class {
	#name : #MyContact,
	#superclass : #HeySql,
	#instVars : [
		'addressBookId',
		'addressBook',
		'firstName',
		'surname',
		'dateOfBirth',
		'telephoneNumber',
		'emailAddress'
	],
	#category : #'ScriptaculistPharoHeySql-Models'
}

{ #category : #utility }
MyContact class >> createFetchMethods [
| dict |
dict := Dictionary
		newFrom:
			{
				('forAddressBookId' -> 'select * from mycontact where addressbookid = $1') . 
				('forId' -> 'select * from mycontact where id = $1')
			}.
	self generateSqlMethods: dict.
]

{ #category : #accessor }
MyContact class >> forAddressBook: addressBook [ 
	^ self forAddressBookId: addressBook id. 
	    
]

{ #category : #accessor }
MyContact class >> forAddressBookId: p1 [ 
	     "Autogenerated heysql-method"
	     | result |
	     result := self executePreparedStatementSafe: 'forAddressBookId_MyContact' values: { p1 }.
	     ^ (self toObject: result).
	    
]

{ #category : #accessor }
MyContact class >> forId: p1 [ 
	     "Autogenerated heysql-method"
	     | result |
	     result := self executePreparedStatementSafe: 'forId_MyContact' values: { p1 }.
	     ^ (self toObject: result).
	    
]

{ #category : #accessor }
MyContact class >> newForAddressBook: addressBook [
	| newAddressBook | 
	newAddressBook := self new.
	newAddressBook addressBook: addressBook.
	^newAddressBook. 
	    
]

{ #category : #accessing }
MyContact >> addressBook [
	^ addressBook
]

{ #category : #accessing }
MyContact >> addressBook: anObject [
	addressBook := anObject.
	addressBookId := anObject id. 
]

{ #category : #accessing }
MyContact >> addressBookId [
	^ addressBookId
]

{ #category : #accessing }
MyContact >> addressBookId: anObject [
	addressBookId := anObject
]

{ #category : #accessing }
MyContact >> dateOfBirth [
	^ dateOfBirth ifNil: [ dateOfBirth := Date today ]. 
]

{ #category : #accessing }
MyContact >> dateOfBirth: anObject [
	dateOfBirth := anObject
]

{ #category : #accessing }
MyContact >> emailAddress [
	^ emailAddress
]

{ #category : #accessing }
MyContact >> emailAddress: anObject [
	emailAddress := anObject
]

{ #category : #accessing }
MyContact >> firstName [
	^ firstName
]

{ #category : #accessing }
MyContact >> firstName: anObject [
	firstName := anObject
]

{ #category : #utility }
MyContact >> freshFromDB [
| freshContact |
id ifNil: [ freshContact := self class new ] 
	ifNotNil: [ freshContact := self class forId: id ].
^freshContact. 
]

{ #category : #utility }
MyContact >> resetFromMemento: aMemento [
dateOfBirth := aMemento dateOfBirth.
emailAddress := aMemento emailAddress.
firstName := aMemento firstName.
surname := aMemento surname.
telephoneNumber := aMemento telephoneNumber.
]

{ #category : #accessing }
MyContact >> surname [
	^ surname
]

{ #category : #accessing }
MyContact >> surname: anObject [
	surname := anObject
]

{ #category : #accessing }
MyContact >> telephoneNumber [
	^ telephoneNumber
]

{ #category : #accessing }
MyContact >> telephoneNumber: anObject [
	telephoneNumber := anObject
]
